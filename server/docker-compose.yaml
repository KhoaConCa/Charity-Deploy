version: '3.8'

# ===============================
# REGION: Networks Configuration
networks:
  frontend:
    name: frontend
    driver: bridge
  backend:
    name: backend
    driver: bridge
  database:
    name: database
    driver: bridge
# ENDREGION
# ===============================

# ===============================
# REGION: Volumes Configuration
volumes:
  neo4j-data:
    name: neo4j-data
  mysql-data:
    name: mysql-data
  mongodb-data:
    name: mongodb-data
  postgres-data:
    name: postgres-data
  redis-data:
    name: redis-data
# ENDREGION
# ===============================

services:
  # ===============================
  # REGION: Frontend Configuration
  nginx:
    container_name: nginx
    image: richyotd/charity-nginx:1.4
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend
      - backend
    depends_on:
      - gateway-service
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost"]
    #   interval: 60s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 30s
  # ENDREGION
  # ===============================

  # ===============================
  # REGION: Backend Services Configuration
  gateway-service:
    container_name: gateway-service
    image: richyotd/charity-gateway:1.0
    expose:
      - "8888"
    networks:
      - backend
      - database
    depends_on:
      - identity-service
      - profile-service

  identity-service:
    container_name: identity-service
    image: richyotd/charity-identity:1.2
    expose:
      - "8080"
    networks:
      - backend
      - database
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/identity/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  profile-service:
    container_name: profile-service
    image: richyotd/charity-profile:1.0
    expose:
      - "8081"
    networks:
      - backend
      - database
    depends_on:
      neo4j:
        condition: service_started
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/profile/health"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
  # ENDREGION
  # ===============================

  # ===============================
  # REGION: Databases Configuration
  mysql:
    container_name: mysql
    image: mysql:8.0.38-debian
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: identity_service
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - database
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s
  
  redis:
    container_name: redis
    image: redis:latest
    expose:
      - "6379"
    volumes:
      - redis-data:/data
    networks:
      - database
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  # mongo:
  #   container_name: mongo
  #   image: bitnami/mongodb:7.0.11
  #   expose:
  #     - "27017"
  #   environment:
  #     MONGODB_ROOT_PASSWORD: root
  #     MONGODB_DATABASE: profile_db
  #   volumes:
  #     - mongodb-data:/bitnami/mongodb
  #   networks:
  #     - database
  #   healthcheck:
  #     test: ["CMD", "mongo", "--eval", "db.runCommand('ping').ok"]
  #     interval: 60s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s

  neo4j:
    container_name: neo4j
    image: neo4j:latest
    expose:
      - "7474"
      - "7687"
    environment:
      NEO4J_AUTH: neo4j/loveHA13
    volumes:
      - neo4j-data:/data
    networks:
      - database
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:7474"]
    #   interval: 60s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 30s

  # postgres:
  #   container_name: postgres
  #   image: postgres:latest
  #   expose:
  #     - "5432"
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres_password
  #     POSTGRES_DB: charity_db
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - database
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "postgres"]
  #     interval: 60s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s
  # ENDREGION
  # ===============================